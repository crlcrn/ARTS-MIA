import flet as ft


class Controller:
    def __init__(self, view, model):
        # the view, with the graphical elements of the UI
        self._view = view
        # the model, which implements the logic of the program and holds the data
        self._model = model

    def handleAnalizzaOggetti(self, e):

        self._model.creaGrafo()
        nNodes, nEdges = self._model.getDetails()

        self._view.txt_result.controls.clear()
        self._view.txt_result.controls.append(
            ft.Text(f"Grafo correttamente creato. Il grafo ha {nNodes} nodi e {nEdges} archi."))


        self._view.update_page()

    def handleCompConnessa(self, e):
        id_added = self._view._txtIdOggetto.value

        try:
            int_id = int(id_added)
        except ValueError:
            self._view.txt_result.controls.clear()
            self._view.txt_result.controls.append(ft.Text("Il valore inserito non Ã¨ un intero valido."))
            self._view.update_page()
            return

        size_connessa = self._model.getConnessa(int_id)

        if size_connessa is not None:
            self._view.txt_result.controls.append(
                ft.Text(f"La componente connessa che contiene {int_id} ha dimensione {size_connessa}.")
            )
        else:
            self._view.txt_result.controls.append(
                ft.Text(f"Il vertice {int_id} non esiste nel grafo.")
            )
        self._view.update_page()
